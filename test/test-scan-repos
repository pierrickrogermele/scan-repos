#!/bin/bash

#############
# CONSTANTS #
#############

SCRIPTDIR=$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)
SCANREPOS=$SCRIPTDIR/../scan-repos

REPOSORIG=repos-orig
REPOSCLONE=repos-clone
FILE=a.txt

#########
# CHECK #
#########

function check {
	echo -n $1...
	if $1 ; then
		echo success. 
	else
		echo failure.
		exit 1
	fi
}

#########
# CLEAN #
#########

function clean {
	rm -rf repos-* *.output
}

###########
# RUN GIT #
###########

function run_git {
	git "$@" >/dev/null 2>&1
}

##############
# MAKE REPOS #
##############

function mk_repos {
	clean
	mkdir $REPOSORIG
	cd $REPOSORIG
	touch $FILE
	run_git init
	run_git add .
	run_git commit -m "Init."
	cd ..
}

######################
# TEST MODIFIED FILE #
######################

function test_modified_file {
	mk_repos
	echo "AAA" >> $REPOSORIG/$FILE
	$SCANREPOS $REPOSORIG > modified_file.output
	diff modified_file.output modified_file.output.ref >/dev/null
}

#####################
# TEST DELETED FILE #
#####################

function test_deleted_file {
	mk_repos
	rm $REPOSORIG/$FILE
	$SCANREPOS $REPOSORIG > deleted_file.output
	diff deleted_file.output deleted_file.output.ref >/dev/null
}

#######################
# TEST UNTRACKED FILE #
#######################

function test_untracked_file {
	mk_repos
	touch $REPOSORIG/some_untracked_file.txt
	$SCANREPOS $REPOSORIG > untracked_file.output
	diff untracked_file.output untracked_file.output.ref >/dev/null
}

#####################
# TEST BRANCH AHEAD #
#####################

function test_branch_ahead {
	mk_repos
	run_git clone $REPOSORIG $REPOSCLONE
	cd $REPOSCLONE
	echo "AAA" >> $FILE
	run_git add .
	run_git commit -m "Add some text."
	cd ..
	$SCANREPOS $REPOSCLONE > branch_ahead.output
	diff branch_ahead.output branch_ahead.output.ref >/dev/null
}

########
# MAIN #
########

check test_modified_file
check test_deleted_file
check test_untracked_file
check test_branch_ahead
